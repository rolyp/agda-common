open import Algebra

module Ext.Algebra.Properties.Lattice {ùëô‚ÇÅ ùëô‚ÇÇ} (L : Lattice ùëô‚ÇÅ ùëô‚ÇÇ) where

   open import Algebra.FunctionProperties
   open import Algebra.Structures
   open import Data.Product
   open import Function
   open Lattice L
   open import Relation.Binary

   open import Algebra.Properties.Lattice L public

   open Poset poset public hiding (Carrier; _‚âà_) renaming (refl to ‚â§-refl)
   open import Relation.Binary.EqReasoning setoid

   ‚àß-absorbs-‚à® : _Absorbs_ _‚âà_ _‚àß_ _‚à®_
   ‚àß-absorbs-‚à® = proj‚ÇÇ absorptive

   ‚à®-absorbs-‚àß : _Absorbs_ _‚âà_ _‚à®_ _‚àß_
   ‚à®-absorbs-‚àß = proj‚ÇÅ absorptive

   -- The partial order happens to be defined in terms of the meet, but there is an equivalent
   -- definition in terms of the join.
   ‚â§-to-‚à® : ‚àÄ x y ‚Üí x ‚â§ y ‚Üí y ‚âà x ‚à® y
   ‚â§-to-‚à® x y x‚â§y =
      begin
         y
      ‚âà‚ü® sym (‚à®-absorbs-‚àß _ _) ‚ü©
         y ‚à® (y ‚àß x)
      ‚âà‚ü® refl ‚ü® ‚à®-cong ‚ü© ‚àß-comm _ _ ‚ü©
         y ‚à® (x ‚àß y)
      ‚âà‚ü® refl ‚ü® ‚à®-cong ‚ü© sym x‚â§y ‚ü©
         y ‚à® x
      ‚âà‚ü® ‚à®-comm _ _ ‚ü©
         x ‚à® y
      ‚àé

   ‚à®-to-‚â§ : ‚àÄ x y ‚Üí y ‚âà x ‚à® y ‚Üí x ‚â§ y
   ‚à®-to-‚â§ x y y‚âàx‚à®y =
      begin
         x
      ‚âà‚ü® sym (‚àß-absorbs-‚à® _ _) ‚ü©
         x ‚àß (x ‚à® y)
      ‚âà‚ü® refl ‚ü® ‚àß-cong ‚ü© sym y‚âàx‚à®y ‚ü©
         x ‚àß y
      ‚àé

   ‚à® ≥ : ‚àÄ {x y} ‚Üí x ‚â§ (x ‚à® y)
   ‚à® ≥ {x} {y} = sym (‚àß-absorbs-‚à® x y)

   ‚à®À° : ‚àÄ {x y} ‚Üí x ‚â§ (y ‚à® x)
   ‚à®À° {x} {y} =
      begin
         x
      ‚âà‚ü® ‚à® ≥ ‚ü©
         x ‚àß (x ‚à® y)
      ‚âà‚ü® refl ‚ü® ‚àß-cong ‚ü© ‚à®-comm _ _ ‚ü©
         x ‚àß (y ‚à® x)
      ‚àé

   _‚àß-compatible_ : ‚àÄ {x x‚Ä≤ y y‚Ä≤} ‚Üí x ‚â§ x‚Ä≤ ‚Üí y ‚â§ y‚Ä≤ ‚Üí x ‚àß y ‚â§ x‚Ä≤ ‚àß y‚Ä≤
   _‚àß-compatible_ {x} {x‚Ä≤} {y} {y‚Ä≤} x‚â§x‚Ä≤ y‚â§y‚Ä≤ =
      begin
         x ‚àß y
      ‚âà‚ü® x‚â§x‚Ä≤ ‚ü® ‚àß-cong ‚ü© y‚â§y‚Ä≤ ‚ü©
         (x ‚àß x‚Ä≤) ‚àß (y ‚àß y‚Ä≤)
      ‚âà‚ü® ‚àß-assoc _ _ _ ‚ü©
         x ‚àß (x‚Ä≤ ‚àß (y ‚àß y‚Ä≤))
      ‚âà‚ü® refl ‚ü® ‚àß-cong ‚ü© ‚àß-comm _ _ ‚ü©
         x ‚àß ((y ‚àß y‚Ä≤) ‚àß x‚Ä≤)
      ‚âà‚ü® refl ‚ü® ‚àß-cong ‚ü© ‚àß-assoc _ _ _ ‚ü©
         x ‚àß (y ‚àß (y‚Ä≤ ‚àß x‚Ä≤))
      ‚âà‚ü® sym (‚àß-assoc _ _ _) ‚ü©
         (x ‚àß y) ‚àß (y‚Ä≤ ‚àß x‚Ä≤)
      ‚âà‚ü® refl ‚ü® ‚àß-cong ‚ü© ‚àß-comm _ _ ‚ü©
         (x ‚àß y) ‚àß (x‚Ä≤ ‚àß y‚Ä≤)
      ‚àé

   infixr 7 _‚àß-compatible_

   _‚à®-compatible_ : ‚àÄ {x x‚Ä≤ y y‚Ä≤} ‚Üí x ‚â§ x‚Ä≤ ‚Üí y ‚â§ y‚Ä≤ ‚Üí x ‚à® y ‚â§ x‚Ä≤ ‚à® y‚Ä≤
   _‚à®-compatible_ {x} {x‚Ä≤} {y} {y‚Ä≤} x‚â§x‚Ä≤ y‚â§y‚Ä≤ = ‚à®-to-‚â§ _ _ (
      begin
         x‚Ä≤ ‚à® y‚Ä≤
      ‚âà‚ü® ‚â§-to-‚à® _ _ x‚â§x‚Ä≤ ‚ü® ‚à®-cong ‚ü© ‚â§-to-‚à® _ _ y‚â§y‚Ä≤ ‚ü©
         (x ‚à® x‚Ä≤) ‚à® (y ‚à® y‚Ä≤)
      ‚âà‚ü® ‚à®-assoc _ _ _ ‚ü©
         x ‚à® (x‚Ä≤ ‚à® (y ‚à® y‚Ä≤))
      ‚âà‚ü® refl ‚ü® ‚à®-cong ‚ü© ‚à®-comm _ _ ‚ü©
         x ‚à® ((y ‚à® y‚Ä≤) ‚à® x‚Ä≤)
      ‚âà‚ü® refl ‚ü® ‚à®-cong ‚ü© ‚à®-assoc _ _ _ ‚ü©
         x ‚à® (y ‚à® (y‚Ä≤ ‚à® x‚Ä≤))
      ‚âà‚ü® sym (‚à®-assoc _ _ _) ‚ü©
         (x ‚à® y) ‚à® (y‚Ä≤ ‚à® x‚Ä≤)
      ‚âà‚ü® refl ‚ü® ‚à®-cong ‚ü© ‚à®-comm _ _ ‚ü©
         (x ‚à® y) ‚à® (x‚Ä≤ ‚à® y‚Ä≤)
      ‚àé)

   infixr 6 _‚à®-compatible_

   -- x ‚à® y is the least upper bound of x and y.
   _‚à®-lub_ : ‚àÄ {x y z} ‚Üí x ‚â§ z ‚Üí y ‚â§ z ‚Üí x ‚à® y ‚â§ z
   _‚à®-lub_ {x} {y} {z} x‚â§z y‚â§z = ‚à®-to-‚â§ _ _ ((
      begin
         z
      ‚âà‚ü® ‚â§-to-‚à® _ _ x‚â§z ‚ü©
         x ‚à® z
      ‚âà‚ü® refl ‚ü® ‚à®-cong ‚ü© ‚â§-to-‚à® _ _ y‚â§z ‚ü©
         x ‚à® (y ‚à® z)
      ‚âà‚ü® sym (‚à®-assoc _ _ _) ‚ü©
         (x ‚à® y) ‚à® z
      ‚àé))

   infixr 6 _‚à®-lub_

   -- x ‚àß y is the greatest lower bound of x and y.
   _‚àß-glb_ : ‚àÄ {x y z} ‚Üí z ‚â§ x ‚Üí z ‚â§ y ‚Üí z ‚â§ x ‚àß y
   _‚àß-glb_ {x} {y} {z} z‚â§x z‚â§y =
      begin
         z
      ‚âà‚ü® z‚â§y ‚ü©
         z ‚àß y
      ‚âà‚ü® z‚â§x ‚ü® ‚àß-cong ‚ü© refl ‚ü©
         (z ‚àß x) ‚àß y
      ‚âà‚ü® ‚àß-assoc _ _ _ ‚ü©
         z ‚àß (x ‚àß y)
      ‚àé

   infixr 7 _‚àß-glb_
